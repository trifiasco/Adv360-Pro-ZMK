#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define DEF 0
#define SYM 1
#define NUM 2
#define KP 3
#define MOD 4
#define FN 5

#define MOD1    LA(LS(LC(LGUI)))
#define MOD2    LA(LS(LCTRL))
#define TMUX    LC(A)

#define MCMSN   LC(UP)
#define MCDSK   LC(DOWN)
#define DSKLT   LC(LEFT)
#define DSKRT   LC(RIGHT)
#define MCLCK   LG(LC(Q))
#define MCSEL   LG(A)
#define MCCUT   LG(X)
#define MCCPY   LG(C)
#define MCPST   LG(V)
#define MCUDO  LG(Z)
#define MCRDO  LG(LS(Z))

#define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer

&lt {
    quick_tap_ms = <200>;
};

/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };

      mo_tog: behavior_mo_tog {
          compatible = "zmk,behavior-hold-tap";
          #binding-cells = <2>;
          flavor = "hold-preferred";
          tapping-term-ms = <200>;
          bindings = <&mo>, <&tog>;
      };

      // ============================================================== programmer dvorak top row mod-morph ==============================================================
        gpipe: grave_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "grave_pipe";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp PIPE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        ppipe: pipe_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "pipe_pipe";
            #binding-cells = <0>;
            bindings = <&kp PIPE>, <&kp PIPE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        pkp_n1: plus_kp_n1 {
            compatible = "zmk,behavior-mod-morph";
            label = "plus_kp_n1";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp KP_N1>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        lkp_n2: left_bracket_kp_n2 {
            compatible = "zmk,behavior-mod-morph";
            label = "left_bracket_kp_n2";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp KP_N2>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        lkp_n3: left_brace_kp_n3 {
            compatible = "zmk,behavior-mod-morph";
            label = "left_brace_kp_n3";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE>, <&kp KP_N3>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        lkp_n4: left_parenthesis_kp_n4 {
            compatible = "zmk,behavior-mod-morph";
            label = "left_parenthesis_kp_n4";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp KP_N4>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        akp_n5: amps_kp_n5 {
            compatible = "zmk,behavior-mod-morph";
            label = "amps_kp_n5";
            #binding-cells = <0>;
            bindings = <&kp AMPS>, <&kp KP_N5>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        ekp_n6: equal_kp_n6 {
            compatible = "zmk,behavior-mod-morph";
            label = "equal_kp_n6";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp KP_N6>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        rkp_n7: right_parenthesis_kp_n7 {
            compatible = "zmk,behavior-mod-morph";
            label = "right_parenthesis_kp_n7";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp KP_N7>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        rkp_n8: right_brace_kp_n8 {
            compatible = "zmk,behavior-mod-morph";
            label = "right_brace_kp_n8";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACE>, <&kp KP_N8>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        rkp_n9: right_bracket_kp_n9 {
            compatible = "zmk,behavior-mod-morph";
            label = "right_bracket_kp_n9";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET>, <&kp KP_N9>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        skp_n0: star_kp_n0 {
            compatible = "zmk,behavior-mod-morph";
            label = "star_kp_n0";
            #binding-cells = <0>;
            bindings = <&kp STAR>, <&kp KP_N0>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        eprcnt: excl_prcnt {
            compatible = "zmk,behavior-mod-morph";
            label = "excl_prcnt";
            #binding-cells = <0>;
            bindings = <&kp EXCL>, <&kp PRCNT>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

        dgrave: dllr_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "dllr_grave";
            #binding-cells = <0>;
            bindings = <&kp DLLR>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        ggrave: grave_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "grave_grave";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        bhash: bslh_hash {
            compatible = "zmk,behavior-mod-morph";
            label = "bslh_hash";
            #binding-cells = <0>;
            bindings = <&kp BSLH>, <&kp HASH>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        acaret: at_caret {
            compatible = "zmk,behavior-mod-morph";
            label = "at_caret";
            #binding-cells = <0>;
            bindings = <&kp AT>, <&kp CARET>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };

      // ============================================================== programmer dvorak top row mod-morph ==============================================================
      // ============================================================== qwerty mod-morph ==============================================================
        centcps: percent_caps {
            compatible = "zmk,behavior-mod-morph";
            label = "percent_caps";
            #binding-cells = <0>;
            bindings = <&kp PRCNT>, <&kp CAPS>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        lbh: lbkt_hash {
            compatible = "zmk,behavior-mod-morph";
            label = "lbkt_hash";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp HASH>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        rba: rbkt_amp {
            compatible = "zmk,behavior-mod-morph";
            label = "rbkt_amp";
            #binding-cells = <0>;
            bindings = <&kp RBKT>, <&kp AMPS>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        lparhash: lpar_hash {
            compatible = "zmk,behavior-mod-morph";
            label = "lpar_hash";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp HASH>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        equalamp: equal_amp {
            compatible = "zmk,behavior-mod-morph";
            label = "equal_amp";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp AMPS>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
        lbrctilde: lbrac_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "lbrac_tilde";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&kp TILDE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
    };

  keymap {
    compatible = "zmk,keymap";
                                                    // ======================================================================= BASE LAYER =========================================================================
                                                    // ------------------------------------------------------------------------           --------------------------------------------------------------------------
                                                    // |    @      |    !    |    {    |   (/#   |    )    |    }    | &tog KP|           |&mo MOD |    *    |   =/&   |    -    |    +    |    $     |   ^        |
                                                    // |   TAB     |    Q    |    W    |    E    |    R    |    T    |  None  |           | None   |    Y    |    U    |    I    |    O    |    P     |  \/|       |
                                                    // |  LCTRL    |    A    |    S    |    D    |    F    |    G    |  None  |           | None   |    H    |    J    |    K    |    L    |    ;     |  '/"       |
                                                    // |  LSHIFT   |    Z    |    X    |    C    |    V    |    B    |---------           -------  |    N    |    M    |    ,    |    .    |    /     |  RSHIFT    |
                                                    // |   fn      |    `    |    %    |   left  |   right |----------                            ----------|    up    |  down   |    [    |    ]     |  fn        |
                                                    // ------------------------------------------------------------------------           --------------------------------------------------------------------------
                                                    //                                                                    Thumb Cluster
                                                    //                                                   -----------------              ------------------
                                                    //                                                   |  LCTRL |  DEL   |             |  ESC   |  RCTRL |
                                                    //                                           -------------------------              ---------------------------
                                                    //                                           |       | mo_tog |  LALT  |             |  RALT  |        |        |
                                                    //                                           | BSPC  |  NUM   |--------              -------- |  ENTER | SPACE  |
                                                    //                                           |       |        |  CMD   |             |  CMD   |        |        |
                                                    //                                           -------------------------              ---------------------------
    default_layer {
      bindings = <
        &kp AT          &kp EXCL     &lbrctilde     &lparhash         &kp RPAR   &kp RBRC  &tog KP                                                                              &mo MOD    &kp STAR    &equalamp     &kp MINUS        &kp PLUS      &kp DLLR       &kp CARET
        &kp TAB         &kp Q        &kp W          &kp E             &kp R      &kp T     &none                                                                                &none      &kp Y       &kp U         &kp I            &kp O         &kp P          &kp BSLH
        &kp LCTRL       &kp A        &kp S          &kp D             &kp F      &kp G     &none           &kp LCTRL   &kp DEL    &kp ESC   &kp RCTRL                           &none      &kp H       &kp J         &kp K            &kp L         &kp SEMI       &kp SQT
        &kp LSHFT       &kp Z        &kp X          &kp C             &kp V      &kp B                                 &kp LALT   &kp RALT                                                 &kp N       &kp M         &kp COMMA        &kp DOT       &kp FSLH       &kp RSHFT
        &mo FN          &kp GRAVE    &centcps       &kp LEFT          &kp RIGHT                  &kp BSPC  MO_TOG(NUM) &kp LGUI   &kp RGUI  &kp ENTER  &kp SPACE                                       &kp UP        &kp DOWN         &kp LBKT      &kp RBKT       &mo FN
      >;
    };

                                                    // ===================================================================== SYMBOL LAYER ====================================================================
                                                    // -----------------------------------------------------------------------           ---------------------------------------------------------------------
                                                    // |          |    1   |    2   |    3    |    4    |    5    |  None  |           | None |    6    |    7    |    8    |    9    |    0     |          |
                                                    // |          |    !   |    @   |    #    |    $    |    %    |  None  |           | None |    ^    |    &    |    *    |    +    |          |          |
                                                    // |          |    [   |    (   |    _    |    )    |    ]    |  None  |           | None |    `    |    =    |    -    |    "    |    :     |          |
                                                    // |          |        |        |    {    |    }    |    \    |---------           -------|    ~    |    |    |    <    |    >    |    ?     |          |
                                                    // |          |        |        |         |         |----------                           ----------|         |         |         |          |          |
                                                    // ----------------------------------------------------                                                ----------------------------------------------------
                                                    //                                                                    Thumb Cluster
                                                    //                                                   -----------------              ------------------
                                                    //                                                   |       |       |              |       |      |
                                                    //                                           -------------------------              ---------------------------
                                                    //                                           |       |        |       |              |       |  LS(   |        |
                                                    //                                           |       |   TAB  |--------              --------|  ENTER |        |
                                                    //                                           |       |        |       |              |       |    )   |        |
                                                    //                                           -------------------------              ---------------------------
    sym {
      bindings = <
        &trans    &trans       &trans      &trans      &trans      &trans        &tog KP                                                              &mo MOD     &trans          &trans       &trans       &trans       &trans      &trans
        &trans    &kp EXCL     &kp AT      &kp HASH    &kp DLLR    &kp PRCNT     &none                                                                &none       &kp CARET       &kp AMPS     &kp STAR     &kp PLUS     &trans      &trans
        &trans    &kp LBKT     &kp LPAR    &kp UNDER   &kp RPAR    &kp RBKT      &none                       &trans &trans &trans &trans              &none       &kp GRAVE       &kp EQUAL    &kp MINUS    &kp DQT      &kp COLON   &trans
        &trans    &trans       &trans      &kp LBRC    &kp RBRC    &kp BSLH                                          &trans &trans                                &kp TILDE       &kp PIPE     &kp LT       &kp GT       &kp QMARK   &trans
        &trans    &trans       &trans      &trans      &trans                                   &kp LG(BSPC) &kp TAB &trans &trans &kp LS(ENTER) &trans                           &trans       &trans       &trans       &trans      &trans
      >;
    };

                                                    // ===================================================================== NUMBER ROW LAYER ================================================================
                                                    // -----------------------------------------------------------------------           ---------------------------------------------------------------------
                                                    // -----------------------------------------------------------------------           ---------------------------------------------------------------------
                                                    // |          |        |        |         |         |         |  None  |           | None |         |         |         |         |          |          |
                                                    // |          |        |        |         |         |         |  None  |           | None |         |         |         |         |          |          |
                                                    // |          |    9   |    5   |    1    |    3    |    7    |  None  |           | None |    6    |    2    |    0    |    4    |    8     |          |
                                                    // |          |        |        |         |         |         |---------           -------|         |         |         |         |          |          |
                                                    // |          |        |        |         |         |----------                           ----------|         |         |         |          |          |
                                                    // ----------------------------------------------------                                                ----------------------------------------------------
    num {
      bindings = <
        &trans   &trans   &trans   &trans      &trans   &trans    &tog KP                                           &mo MOD   &trans     &trans     &trans     &trans     &trans    &trans
        &trans   &trans   &trans   &trans      &trans   &trans    &none                                             &none     &trans     &trans     &trans     &trans     &trans    &trans
        &trans   &kp N9   &kp N5   &kp N1      &kp N3   &kp N7    &none        &trans &trans &trans &trans          &none     &kp N6     &kp N2     &kp N0     &kp N4     &kp N8    &trans
        &trans   &trans   &trans   &trans      &trans   &trans                        &trans &trans                           &trans     &trans     &trans     &trans     &trans    &trans
        &trans   &trans   &trans   &trans      &trans                   &trans &trans &trans &trans &trans &trans                        &trans     &trans     &trans     &trans    &trans
      >;
    };

                                                    // ===================================================================== NUMBER PAD LAYER ================================================================
                                                    // -----------------------------------------------------------------------           ---------------------------------------------------------------------
                                                    // -----------------------------------------------------------------------           ---------------------------------------------------------------------
                                                    // |          |        |        |         |         |         |  None  |           | None |         |         |         |         |          |          |
                                                    // |          |        |        |         |         |         |  None  |           | None |         |    7    |    8    |    9    |          |          |
                                                    // |          |        |        |         |         |         |  None  |           | None |         |    1    |    2    |    3    |    8     |          |
                                                    // |          |        |        |         |         |         |---------           -------|         |    4    |    5    |    6    |          |          |
                                                    // |          |        |        |         |         |----------                           ----------|         |         |         |          |          |
                                                    // ----------------------------------------------------                                                ----------------------------------------------------
    // only the right side middle 3 rows/cols are relevant. 0 is the right thumb
    // keypad {
    //   bindings = <
    //     &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &trans                                                           &mo MOD &kp N6 &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS
    //     &kp TAB   &kp Q     &kp W    &kp E    &kp R      &kp T  &none                                                            &none &kp Y  &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &kp BSLH
    //     &kp ESC   &kp A     &kp S    &kp D    &kp F      &kp G  &none               &trans &trans &trans  &trans                 &none &kp H  &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_PLUS     &kp SQT
    //     &kp LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B                            &trans &trans                                &kp N  &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_ENTER    &kp RSHFT
    //     &mo FN     &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT                    &trans &trans &trans &trans &trans &kp KP_N0                      &kp UP     &kp DOWN     &kp KP_DOT    &kp RBKT        &mo FN
    //   >;
    // };
    
    // ===================================================================== Programmer's Dvorak Layout V1.0 ====================================================================
    prog_dvorak_layer {
          bindings = <
            &ppipe       &pkp_n1       &lkp_n2       &lkp_n3      &lkp_n4       &akp_n5      &trans                                                                 &trans       &ekp_n6    &rkp_n7    &rkp_n8     &rkp_n9     &skp_n0    &eprcnt
            &kp TAB      &kp SEMI      &kp COMMA     &kp DOT      &kp P         &kp Y        &none                                                                  &none        &kp F      &kp G      &kp C       &kp R       &kp L      &bhash
            &kp ESC      &kp A         &kp O         &kp E        &kp U         &kp I        &none           &trans &trans &trans  &trans                           &none        &kp D      &kp H      &kp T       &kp N       &kp S      &kp MINUS
            &kp LSHFT    &kp APOS      &kp Q         &kp J        &kp K         &kp X                               &trans &trans                                                &kp B      &kp M      &kp W       &kp V       &kp Z      &kp RSHFT
            &mo FN       &dgrave       &ggrave       &trans       &trans                              &trans &trans &trans &trans &trans &trans                                             &trans     &trans      &kp FSLH    &acaret    &mo FN
            >;
        };
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                     &trans                 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &bootloader                                                               &bootloader            &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &none                   &none &none &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &macro_ver   &none                                      &none &none                                                        &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none                                       &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none &none &none
      >;
    };

    fn {
      bindings = <
        &kp F1   &kp F2      &kp F3      &kp F4      &kp F5       &kp F6  &tog KP                                                           &mo MOD   &kp F7        &kp F8        &kp F9       &kp F10      &kp F11      &kp F12
        &trans   &kp MCLCK   &trans      &kp MCMSN   &kp MCRDO    &trans  &none                                                             &none     &kp MCCPY     &kp MCUDO     &trans       &trans       &kp MCPST    &kp C_VOL_UP
        &trans   &trans      &kp DSKLT   &kp MCDSK   &kp DSKRT    &trans  &none                &trans &trans &trans &trans                  &none     &kp LEFT      &kp DOWN      &kp UP       &kp RIGHT    &trans       &kp C_VOL_DN
        &trans   &trans      &kp MCCUT   &trans      &kp MCSEL    &trans                              &trans &trans                                   &trans        &trans        &trans       &trans       &trans       &trans
        &trans   &trans      &trans      &trans      &trans                             &trans &trans &trans &trans &trans &trans                                   &trans        &trans       &trans       &trans       &trans
      >;
    };

  };
};
